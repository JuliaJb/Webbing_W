1 - Donner la valeur booléenne des variables $a, $b, $c, $d, $e et $f :

$a="0";
$b="TRUE";
$c=FALSE;
$d=($a OR $b);
$e=($a AND $c);
$f=($a XOR $b);

Conseil : écrire une fonction pour tester ces variables



function bool($valeur) {
    if($valeur) {
        echo "True";
    }
    else {
        echo "False";
    }
}

bool($f);



2- Rédiger une expression conditionnelle pour tester si un nombre est à la fois un multiple de 3 et de 5.

	function estMultipleDe3etDe5($nombre) {
	    if($nombre % 3 == 0 && $nombre % 5 == 0) {
	        return True;
	    }
	    return False;
	}

	// sommme de 1 à 1000 des multiples de 3 et 5

	$count = 0;
	for($i= 1; $i <= 1000; $i++) {
	    if(estMultipleDe3etDe5($i)) {
	        $count+= $i;
	    }
	}

	echo $count;



3- Écrire une expression conditionnelle utilisant les variables $age et $sexe dans une instruction if pour sélectionner une personne de sexe féminin dont l’age est compris entre 21 et 40 ans et afficher un message de bienvenue approprié.

EASY



4- Effectuer une suite de tirages de nombres aléatoires jusqu’à obtenir une suite composée d’un nombre pair suivi de deux nombres impairs.

$compteur = 0;

do {
    $x = mt_rand(0,1000);
    $y = mt_rand(0,1000);
    $z = mt_rand(0,1000);
    $compteur++;
    echo "$x $y $z\n";
} while($x % 2 == 1 || $y % 2 == 0 || $z % 2 == 0);


Conseil : voir la fonction rand ; afficher aussi le nombre d'itération

5- Choisir un nombre de trois chiffres. Effectuer ensuite des tirages aléatoires et compter le nombre de tirages nécessaire pour obtenir le nombre initial. Arrêter les tirages et afficher le nombre de coups réalisés. Réaliser ce script d’abord avec l’instruction while puis avec l’instruction for.

/*$compteur = 0;
$nombre = 0;

do {
    $val = mt_rand(100, 999);
    $compteur++;
} while($nombre != $val);
echo $compteur;*/


6- Créer un tableau dont les indices varient de 11 à 36 et dont les valeurs sont des lettres de A à Z. Lire ensuite ce tableau avec une boucle for puis une boucle foreach et afficher les indices et les valeurs (la fonction chr(n) retourne le caractère dont le code ASCII vaut n).


/* initialisation du tableau*/
for($i=11; $i<=36; $i++) {
    $tab[$i] = chr(54+$i);
}

/* affichage avec for */
for($i=11; $i<=36; $i++) {
    echo $i, $tab[$i];
}

echo "\n";
/* affichage de foreach */
foreach($tab as $key => $e){
    echo $key, $e;
}


7- Utiliser une boucle while pour déterminer le premier entier obtenu par tirage aléatoire qui soit un multiple d’un nombre donné. Écrire la variante utilisant la boucle do…while. Avec une boucle while, notez qu’il faut initialiser $x avant la boucle.

8- Rechercher le PGCD (plus grand commun diviseur) de deux nombres donnés. Gérer au moyen d’une exception le cas où au moins un des nombres n’est pas entier.

Conseil : utiliser l'algo sur http://villemin.gerard.free.fr/ThNbDemo/AlgoEucl.htm

9- En utilisant la fonction strlen() écrivez une boucle qui affiche chaque lettre de la chaîne PHP 5 sur une ligne différente.

10- Utilisez les fonctions adéquates afin que la chaîne <form action="script.php"> soit affichée telle quelle et non comme du code HTML.

11- Créez une expression régulière pour valider un âge inférieur à 100 ans.
Conseil : voir la fonction ereg et les sites http://regexr.com/, http://teabait.github.io/learn-regex/, https://regex.alf.nu/

12- Écrivez un tableau multidimensionnel associatif dont les clés sont des noms de personne et les valeurs des tableaux indicés contenant le prénom, la ville de résidence et l’age de la personne.

13- Utilisez une boucle foreach pour lire le tableau de l'exercice 12

14- Utilisez une boucle while pour lire le tableau de l'exercice 12

15- Créer un formulaire comprenant un groupe de champs ayant pour titre "Adresse client". Le groupe doit permettre la saisie du nom, du prénom, de l’adresse, de la ville et du code postal. Les données sont ensuite traitées par un fichier PHP séparé récupérant les données et les affichant en HTML

16- Comment faire pour que les données soient traitées par le même fichier que celui qui contient le formulaire du 15 ?

17- Créer un formulaire demandant la saisie d’un prix HT et d’un taux de TVA. Le script affiche le montant de la TVA et le prix TTC dans deux zones de texte créées dynamiquement. Le formulaire maintient les données saisies.

18- Créer un formulaire n’effectuant que le transfert de fichiers ZIP et d’une taille limitée à 1 Mo. Le script affiche le nom du fichier du poste client ainsi que la taille du fichier transféré et la confirmation de réception.

19- Dans la perspective de création d’un site d’agence immobilière, créer un formulaire comprenant trois boutons Submit nommés « Vendre », « Acheter » et « Louer ». En fonction du choix effectué par le visiteur, le rediriger vers une page spécialisée dont le contenu réponde au critère choisi.

20- Calculez votre âge à l’instant actuel à la seconde près.

21- Vérifiez si la date du 29 Février 1962 a existé.

22- Quel jour de la semaine était le 3 mars 1993 ? Affichez le résultat en français.

23- Affichez toutes les années bissextiles comprises entre 1999 et 2999.

24- Écrivez une classe représentant une ville. Elle doit avoir les propriétés nom et département et une méthode affichant « la ville X est dans le département Y ». Créez des objets ville, affectez leurs propriétés, et utilisez la méthode d’affichage.

25- Modifiez la classe précédente en la dotant d’un constructeur. Réalisez les mêmes opérations de création d’objets et d’affichage.

26- Créez une classe représentant une personne. Elle doit avoir les propriétés nom, prénom et adresse, ainsi qu’un constructeur et un destructeur. Une méthode getPersonne() doit retourner les coordonnées complètes de la personne. Une méthode setAdresse() doit permettre de modifier l’adresse de la personne. Créez des objets personne, et utilisez l’ensemble des méthodes.

27- Créez une classe abstraite représentant une personne. Elle déclare les propriétés nom et prénom et un constructeur. Créez une classe client dérivée de la classe personne en y ajoutant la propriété adresse et une méthode setCoord() qui affiche les coordonnées complètes de la personne. Créez une classe électeur dérivée de la même classe abstraite, et ajoutez-y deux propriétés bureau_de_vote et vote, ainsi qu’une méthode aVoter(), qui enregistre si une personne a voté dans la propriété vote.